// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/SergeyBogomolovv/profile-manager/profile/internal/domain"
	mock "github.com/stretchr/testify/mock"
)

// ProfileRepo is an autogenerated mock type for the ProfileRepo type
type ProfileRepo struct {
	mock.Mock
}

type ProfileRepo_Expecter struct {
	mock *mock.Mock
}

func (_m *ProfileRepo) EXPECT() *ProfileRepo_Expecter {
	return &ProfileRepo_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: ctx, profile
func (_m *ProfileRepo) Create(ctx context.Context, profile domain.Profile) error {
	ret := _m.Called(ctx, profile)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.Profile) error); ok {
		r0 = rf(ctx, profile)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ProfileRepo_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type ProfileRepo_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - ctx context.Context
//   - profile domain.Profile
func (_e *ProfileRepo_Expecter) Create(ctx interface{}, profile interface{}) *ProfileRepo_Create_Call {
	return &ProfileRepo_Create_Call{Call: _e.mock.On("Create", ctx, profile)}
}

func (_c *ProfileRepo_Create_Call) Run(run func(ctx context.Context, profile domain.Profile)) *ProfileRepo_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(domain.Profile))
	})
	return _c
}

func (_c *ProfileRepo_Create_Call) Return(_a0 error) *ProfileRepo_Create_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ProfileRepo_Create_Call) RunAndReturn(run func(context.Context, domain.Profile) error) *ProfileRepo_Create_Call {
	_c.Call.Return(run)
	return _c
}

// NewProfileRepo creates a new instance of ProfileRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewProfileRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *ProfileRepo {
	mock := &ProfileRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
