services:
  postgres:
    image: postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    env_file:
      - .env
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      retries: 5
      start_period: 5s

  rabbitmq:
    image: rabbitmq:4.0-management
    restart: unless-stopped
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    env_file:
      - .env
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'check_port_connectivity']
      interval: 10s
      retries: 5
      start_period: 10s

  sso:
    build: sso
    restart: unless-stopped
    ports:
      - '8081:8081'
      - '50051:50051'
    env_file:
      - .env
    environment:
      - POSTGRES_URL=${SSO_POSTGRES_URL}
      - REDIS_URL=${SSO_REDIS_URL}
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./config/sso.yml:/config/sso.yml
    command: ['/sso', '--config=/config/sso.yml']

  profile:
    build: profile
    restart: unless-stopped
    ports:
      - '50052:50052'
    env_file:
      - .env
    environment:
      - POSTGRES_URL=${PROFILE_POSTGRES_URL}
    depends_on:
      - sso
    volumes:
      - ./config/profile.yml:/config/profile.yml
    command: ['/profile', '--config=/config/profile.yml']

  notification:
    build: notification
    restart: unless-stopped
    ports:
      - '50053:50053'
    env_file:
      - .env
    environment:
      - REDIS_URL=${NOTIFICATION_REDIS_URL}
      - POSTGRES_URL=${NOTIFICATION_POSTGRES_URL}
    depends_on:
      - sso
    volumes:
      - ./config/notification.yml:/config/notification.yml
    command: ['/notifications', '--config=/config/notification.yml']

  gateway:
    build: gateway
    restart: unless-stopped
    ports:
      - '8080:8080'
    env_file:
      - .env
    depends_on:
      - sso
      - profile
      - notification
    volumes:
      - ./config/gateway.yml:/config/gateway.yml
    command: ['/gateway', '--config=/config/gateway.yml']

volumes:
  pgdata:
  rabbitmq_data:

networks:
  default:
    driver: bridge
